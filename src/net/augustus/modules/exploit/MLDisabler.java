package net.augustus.modules.exploit;

import net.augustus.events.EventSendPacket;
import net.augustus.events.EventTick;
import net.augustus.events.EventUpdate;
import net.augustus.events.EventWorld;
import net.augustus.modules.Categorys;
import net.augustus.modules.Module;
import net.augustus.settings.BooleanValue;
import net.augustus.utils.skid.vestige.LogUtil;
import net.lenni0451.eventapi.reflection.EventTarget;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;

import java.awt.*;

public class MLDisabler extends Module {


    public MLDisabler() {
        super("MLDisabler", Color.white, Categorys.EXPLOIT);

    }
    public BooleanValue autoDis = new BooleanValue(7409,"AutoDisable",this,true);
    public BooleanValue disOnWorld = new BooleanValue(6718,"DisableOnWorld",this,true);
    public BooleanValue tips = new BooleanValue(8019,"Tips",this,true);
    public BooleanValue debug = new BooleanValue(6208,"Debug",this,true);
    public boolean enjoy = false;
    private int restartTicks = 0;
    private boolean var = false;
    private int able = 0;
    public void resetAll() {
        enjoy = false;
        restartTicks = 0;
        var = false;
        able = 0;
    }
    @Override
    public void onEnable() {
        super.onEnable();
        resetAll();
        if (tips.getBoolean()) {
            LogUtil.addChatMessage("§F[§6MLDisabler§F][§5Tips§f]§4 Please Kill Yourself in Game !");
        }
    }

    @Override
    public void onDisable() {
        super.onDisable();
        resetAll();
    }
    @EventTarget
    public void onWorld(EventWorld eventWorld) {
        if (disOnWorld.getBoolean()) {
            this.setToggled(false);
        }
    }
    @EventTarget
    public void onEventUpdate(EventUpdate eventUpdate) {
        if (mc.thePlayer.capabilities.allowFlying) {
            able ++;
        }
        if (!mc.thePlayer.capabilities.allowFlying && enjoy && restartTicks >= 10) {
            if (tips.getBoolean()) {
                LogUtil.addChatMessage("§F[§6MLDisabler§F][§5Tips§f]§2 OK! Start Flying!");
                able = 0;
            }
            enjoy = false;
            if (autoDis.getBoolean()) {
                this.setToggled(false);
            }
        }
    }
    @EventTarget
    public void onEventTick(EventTick eventTick) {
        if (var && restartTicks < 100) {
            restartTicks++;
        }
    }
    @EventTarget
    public void onEventSendPacket(EventSendPacket eventSendPacket) {
        if (eventSendPacket.getPacket() instanceof C0FPacketConfirmTransaction || eventSendPacket.getPacket() instanceof C03PacketPlayer) {
            if ((able >30 && mc.thePlayer.capabilities.allowFlying) || (restartTicks < 20 && able > 30)) {
                eventSendPacket.setCancelled(true);
                if (debug.getBoolean()) {
                    LogUtil.addChatMessage("§F[§6MLDisabler§F]§F[§5Debug§F] Cancelled §8"+eventSendPacket.getPacket()+"§f !");
                }

                if (!mc.thePlayer.capabilities.allowFlying) {
                    var = true;
                    enjoy = true;
                }
            }
            if (mc.thePlayer.capabilities.allowFlying) {
                restartTicks = 0;
                var = false;

            }
        }
    }


}
