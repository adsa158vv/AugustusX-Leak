package net.augustus.modules.exploit;

import net.augustus.events.EventMove;
import net.augustus.events.EventTick;
import net.augustus.events.EventUpdate;
import net.augustus.events.EventWorld;
import net.augustus.modules.Categorys;
import net.augustus.modules.Module;
import net.augustus.settings.DoubleValue;
import net.augustus.settings.StringValue;
import net.augustus.utils.PlayerUtil;
import net.augustus.utils.PrePostUtil;
import net.augustus.utils.TimeHelper;
import net.augustus.utils.skid.vestige.LogUtil;
import net.lenni0451.eventapi.reflection.EventTarget;
import net.minecraft.block.Block;
import net.minecraft.block.BlockAir;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.util.BlockPos;

import java.awt.*;
import java.util.ArrayList;

public class GrimTNTFly extends Module {


   public GrimTNTFly() {
      super("GrimTNTFly", Color.DARK_GRAY, Categorys.EXPLOIT);
   }

   private int tick = 0;
   private int s = 0;
   private boolean hasReported = false;

   @Override
   public void onEnable() {
      s = 0;
      tick = 0;
   }
   @Override
   public void onDisable() {
      s = 0;
      tick = 0;
   }

   @Override
   public void onWorld(EventWorld event) {
      super.onWorld(event);
      s = 0;
      tick = 0;
   }

   @EventTarget
   public void onEventUpdate(EventUpdate eventUpdate) {
      if (!mc.thePlayer.onGround) {
         tick++;
      } else {
         tick = 0;
         s = 0;
      }
      if (tick >= 20) {
         s += 1;
         tick = 0;
         hasReported = false;
      }
      if (s >= 1 && !hasReported) {
         LogUtil.addChatMessage("§F[§6GrimTNTFly§F] You are Flying for§2 "+ s +"§F Seconds!");
         hasReported = true;
      }
   }

   @EventTarget
   public void onEventMove(EventMove eventMove) {
      if (eventMove.isPre()) {
         mc.thePlayer.setPositionAndRotation(
                 mc.thePlayer.posX + 1000,
                 mc.thePlayer.posY,
                 mc.thePlayer.posZ,
                 mc.thePlayer.rotationYaw,
                 mc.thePlayer.rotationPitch
         );
      } if (eventMove.isPost()) {
         mc.thePlayer.setPositionAndRotation(
                 mc.thePlayer.posX - 1000,
                 mc.thePlayer.posY,
                 mc.thePlayer.posZ,
                 mc.thePlayer.rotationYaw,
                 mc.thePlayer.rotationPitch
         );
      }
   }
}
